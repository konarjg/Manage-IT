@page
@using EFModeling.EntityProperties.DataAnnotations.Annotations;
@using System.Text.Json;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Calendar
@{
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>Manage IT | Main</title>
        <link rel="icon" href=@Href("Graphics/logo.png") />
        <meta name="description" content="A convenient IT Project management tool for both managers and employees." />
        <meta name="keywords" content="management, IT, programming, project, www, programmer" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
        <meta name="author" content="Bosnian IT Management Inc." />
        <link rel="stylesheet" href="~/Calendar.css" type="text/css" />

        <!--Because Razor adds a scope identifier and a helper tag,
        body needs to be styled in the style tag as per
        https://github.com/dotnet/aspnetcore/issues/41580-->
        <style>
            body {
                width: 100vw;
                height: 100vh;
                margin: 0px;
                background: linear-gradient(#000000, #000040);
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            }
        </style>

        <script>
            function mouseClick(element, event) 
            {
                if (event.type == 'contextmenu')
                {
                    event.preventDefault();
                    var idDate = element.id;

                    window.location.replace("/Calendar?action=deleteMeeting&idDate=" + idDate);
                }
            }
        </script>
    </head>

    <body>
        <header>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
            <div class="topnav">
                <a class="active" href=@Href("~/")><i class="fa fa-fw fa-home"></i> Home</a>
                <a href="#"><i class="fa fa-fw fa-download"></i> Downloads</a>
                <a href="#"><i class="fa fa-fw fa-question"></i>About</a>
                <div class="topnav-right">
                    @if (HttpContext.Session.Get<User>("User").Admin)
                    {
                        <a href=@Href("~/AdminPanel")><i class="fa fa-fw fa-cog"></i>Admin Panel</a>
                    }

                    <a href=@Href("~/AccountManagement")><i class="fa fa-fw fa-user-circle"></i>My Account</a>
                    <a href=@Href("~/Chat")><i class="fa fa-fw fa-commenting"></i>Chat</a>
                    <a href=@Href("~/Calendar")><i class="fa fa-fw fa-calendar"></i>Calendar</a>
                    <a href=@Href("~/LogOut")><i class="fa fa-fw fa-sign-out"></i>Log Out</a>
                </div>

            </div>
        </header>

        @{
            // responsible for getting the first and last days of the month
            var getDate = Model.Date;

            var firstDayOfTheMonth = new DateTime(getDate.Year, getDate.Month, 1);
            var lastDayOfTheMonth = firstDayOfTheMonth.AddMonths(1).AddDays(-1);

            var numberOfDays = Convert.ToInt16(lastDayOfTheMonth.ToString("dd"));
        }

        <table class="calendar">
            <thead>
                <tr class="row">
                    <th></th>
                    <th></th>
                    <th><a href=@Href("~/Calendar?action=previous")><i class="fa fa-fw fa-arrow-left"></i></a></th>
                    <th>@Model.GetMonthName(getDate.Month) @getDate.Year</th>
                    <th><a href=@Href("~/Calendar?action=next")><i class="fa fa-fw fa-arrow-right"></i></a></th>
                </tr>
                <tr>
                    <th>Monday</th>
                    <th>Tuesday</th>
                    <th>Wednesday</th>
                    <th>Thursday</th>
                    <th>Friday</th>
                    <th>Saturday</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    @{
                        var startDate = firstDayOfTheMonth.AddDays(-(int)firstDayOfTheMonth.DayOfWeek);
                    }

                    @for (int i = 0; i < 42; i++)
                    {
                        DateTime date = startDate.AddDays(i);
                        if (i % 7 == 0 && i > 0)
                        {
                            @:</tr><tr>
                        }

                        string meetingName = string.Empty;
                        long projectId = -1;

                        foreach (var meeting in Model.Meetings)
                        {
                            if (meeting.Date.Year != date.Year || meeting.Date.Month != date.Month || meeting.Date.Day != date.Day)
                            {
                                continue;
                            }

                            meetingName = meeting.Title;
                            projectId = meeting.ProjectId;
                        }

                        if (date.Month != getDate.Month)
                        {
                            if (meetingName != string.Empty)
                            {
                                <td class=lastMonth-meeting oncontextmenu="mouseClick(this, event)" id="@projectId!@date.ToString("yyyy-MM-dd")">@date.Day @meetingName</td>
                                continue;
                            }

                            <td class="lastMonth ">@date.Day</td>
                        }
                        else
                        {
                            if (meetingName != string.Empty)
                            {
                                <td class=meeting oncontextmenu="mouseClick(this, event)" id="@projectId!@date.ToString("yyyy-MM-dd")">@date.Day @meetingName</td>
                                continue;
                            }

                            <td class="thisMonth">@date.Day</td>
                        }
                    }
                </tr>
            </tbody>
        </table>

        <footer>
            <div class="bottomnavbar">
                <a href="#feedback">Feedback</a>
                <a href="#ToS">Terms of Service</a>
                <a href="#privacy-policy">Privacy policy</a>
            </div>
        </footer>
    </body>
    </html>
}
