@page
@using EFModeling.EntityProperties.DataAnnotations.Annotations
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@Html.AntiForgeryToken()
@model Chat
@{
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <meta charset="utf-8" />
            <title>Manage IT | Main</title>
            <link rel="icon" href=@Href("Graphics/logo.png") />
            <meta name="description" content="A convenient IT Project management tool for both managers and employees." />
            <meta name="keywords" content="management, IT, programming, project, www, programmer" />
            <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
            <meta name="author" content="Bosnian IT Management Inc." />
            <link rel="stylesheet" href="~/Chat.css" type="text/css" />
            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

            <!--Because Razor adds a scope identifier and a helper tag,
            body needs to be styled in the style tag as per
            https://github.com/dotnet/aspnetcore/issues/41580-->
            <style>
                body {
                    width: 100vw;
                    height: 100vh;
                    margin: 0px;
                    background: linear-gradient(#000000, #000040);
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                }
            </style>

            <script>
                function createConversation(credential) {
                    $.ajax({
                        type: "POST",
                        url: "/Chat?handler=CreateConversation",
                        data: { credential: credential },
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                        success: function (response) {
                            if (response.success) {
                                window.location.reload();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            alert("error");
                        }
                    });
                }

                function selectConversation(conversationId) {
                    $.ajax({
                        type: "POST",
                        url: "/Chat?handler=SelectConversation",
                        data: { conversationId: conversationId },
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                        success: function (response) {
                            if (response.success) {
                                window.location.reload();
                            }
                        },
                        error: function () {
                            alert("error");
                        }
                    });
                }

                function deleteConversation(conversationId) {
                    var result = confirm("Do you really want to delete this conversation?");

                    if (result) {
                        $.ajax({
                            type: "POST",
                            url: "/Chat?handler=DeleteConversation",
                            data: { conversationId: conversationId },
                            beforeSend: function (xhr) {
                                xhr.setRequestHeader("XSRF-TOKEN",
                                    $('input:hidden[name="__RequestVerificationToken"]').val());
                            },
                            success: function (response) {
                                if (response.success) {
                                    window.location.reload();
                                }
                            },
                            error: function () {
                                alert("error");
                            }
                        });
                    }
                }

                function sendMessage(message) {
                    $.ajax({
                        type: "POST",
                        url: "/Chat?handler=SendMessage",
                        data: { message: message },
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                        success: function (response) {
                            if (response.success) {
                                window.location.reload();
                            }
                        },
                        error: function () {
                            alert("error");
                        }
                    });
                }
            </script>
        </head>

        <body>
            <header>
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
                <div class="topnav">
                    <a class="active" href=@Href("~/")><i class="fa fa-fw fa-home"></i> Home</a>
                    <div class="topnav-right">
                        @if (HttpContext.Session.Get<User>("User").Admin)
                        {
                            <a href=@Href("~/AdminPanel")><i class="fa fa-fw fa-cog"></i>Admin Panel</a>
                        }

                        <a href=@Href("~/AccountManagement")><i class="fa fa-fw fa-user-circle"></i>My Account</a>
                        <a href=@Href("~/Chat")><i class="fa fa-fw fa-commenting"></i>Chat</a>
                        <a href=@Href("~/Calendar")><i class="fa fa-fw fa-calendar"></i>Calendar</a>
                        <a href=@Href("~/LogOut")><i class="fa fa-fw fa-sign-out"></i>Log Out</a>
                    </div>

                </div>
            </header>

            <div class="main">
                <div class="chat">
                    <div class="chatBox">
                    @{
                        List<Conversation> conversations;
                        ChatManager.Instance.GetAllConversations(Model.User.UserId, out conversations);

                        Model.Conversations = conversations;

                        if (Model.Conversations == null)
                        {
                            Model.Conversations = new();
                        }

                        HttpContext.Session.Set<List<Conversation>>("Conversations", Model.Conversations);
                    }

                    <div class="messages">
                        @if (Model.CurrentConversation != null)
                        {
                            List<Message> messages;
                            ChatManager.Instance.GetAllMessages(Model.CurrentConversation.ConversationId, out messages);

                            if (messages == null)
                            {
                                messages = new();
                            }

                            foreach (var message in messages)
                            {
                                if (message.UserId == Model.User.UserId)
                                {
                                    <div class="message own">@message.MessageBody</div>
                                }
                                else
                                {
                                    <div class="message else">@message.MessageBody</div>
                                }
                            }
                        }
                    </div>

                    @if (Model.CurrentConversation != null)
                    {
                        <div class="sendMessageBox">
                            <textarea placeholder="Type a message..." class="messageField" id="message"></textarea>
                            <i class="fa fa-fw fa-paper-plane send" onclick="sendMessage(document.getElementById('message').value)"></i>
                        </div>
                    }

                    </div>

                    <div class="conversationsBox">
                        <div class="conversations">
                        @foreach (var conversation in Model.Conversations)
                        {
                            User target;
                            string className;

                            if (Model.CurrentConversation != null)
                            {
                                className = conversation.ConversationId == Model.CurrentConversation.ConversationId ? "conversation current" : "conversation";
                            }
                            else
                            {
                                className = "conversation";
                            }

                            if (conversation.User1Id != Model.User.UserId)
                            {
                                UserManager.Instance.GetUser(conversation.User1Id, out target);
                            }
                            else
                            {
                                UserManager.Instance.GetUser(conversation.User2Id, out target);
                            }

                            <div class="@className" onclick="selectConversation(@conversation.ConversationId)">
                                <span class="conversationName">@target.Login</span>
                                <i class="fa fa-fw fa-trash delete" onclick="deleteConversation(@conversation.ConversationId)"></i>
                            </div>
                        }  

                        </div>

                        <div class="searchBox">
                            <textarea class="searchField" id="search" rows="1" placeholder="Email or username" maxlength="60"></textarea>
                            <i class="fa fa-fw fa-envelope search" onclick="createConversation(document.getElementById('search').value)"></i>
                        </div>
                    </div>
                </div>

            </div>

            <footer>
                <div class="bottomnavbar">
                    
                </div>
            </footer>
        </body>
    </html>
}
