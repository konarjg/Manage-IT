/*
Deployment script for manageIT

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "manageIT"
:setvar DefaultFilePrefix "manageIT"
:setvar DefaultDataPath "D:\Services\MSSQL\Data\"
:setvar DefaultLogPath "D:\Services\MSSQL\Data\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[UserPermissions]...';


GO
CREATE TABLE [dbo].[UserPermissions] (
    [UserId]          BIGINT NOT NULL,
    [ProjectId]       BIGINT NOT NULL,
    [Editing]         BIT    NOT NULL,
    [InvitingMembers] BIT    NOT NULL,
    [KickingMembers]  BIT    NOT NULL
);


GO
PRINT N'Creating Index [dbo].[UserPermissions].[IX_Users_UserPermissions]...';


GO
CREATE NONCLUSTERED INDEX [IX_Users_UserPermissions]
    ON [dbo].[UserPermissions]([UserId] ASC);


GO
PRINT N'Creating Index [dbo].[UserPermissions].[IX_Projects_UserPermissions]...';


GO
CREATE NONCLUSTERED INDEX [IX_Projects_UserPermissions]
    ON [dbo].[UserPermissions]([ProjectId] ASC);


GO
PRINT N'Creating Table [dbo].[Prefixes]...';


GO
CREATE TABLE [dbo].[Prefixes] (
    [PrefixId] SMALLINT     NOT NULL,
    [Country]  VARCHAR (40) NOT NULL,
    PRIMARY KEY CLUSTERED ([PrefixId] ASC)
);


GO
PRINT N'Creating Table [dbo].[ProjectMembers]...';


GO
CREATE TABLE [dbo].[ProjectMembers] (
    [UserId]    BIGINT NOT NULL,
    [ProjectId] BIGINT NOT NULL
);


GO
PRINT N'Creating Index [dbo].[ProjectMembers].[IX_Projects_ProjectMembers]...';


GO
CREATE NONCLUSTERED INDEX [IX_Projects_ProjectMembers]
    ON [dbo].[ProjectMembers]([ProjectId] ASC);


GO
PRINT N'Creating Index [dbo].[ProjectMembers].[IX_Users_ProjectMembers]...';


GO
CREATE NONCLUSTERED INDEX [IX_Users_ProjectMembers]
    ON [dbo].[ProjectMembers]([UserId] ASC);


GO
PRINT N'Creating Table [dbo].[TaskDetails]...';


GO
CREATE TABLE [dbo].[TaskDetails] (
    [UserId] BIGINT NOT NULL,
    [TaskId] BIGINT NOT NULL
);


GO
PRINT N'Creating Index [dbo].[TaskDetails].[IX_Users_TaskDetails]...';


GO
CREATE NONCLUSTERED INDEX [IX_Users_TaskDetails]
    ON [dbo].[TaskDetails]([UserId] ASC);


GO
PRINT N'Creating Index [dbo].[TaskDetails].[IX_Tasks_TaskDetails]...';


GO
CREATE NONCLUSTERED INDEX [IX_Tasks_TaskDetails]
    ON [dbo].[TaskDetails]([TaskId] ASC);


GO
PRINT N'Creating Table [dbo].[TaskLists]...';


GO
CREATE TABLE [dbo].[TaskLists] (
    [TasklistId]  BIGINT       IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (50) NOT NULL,
    [Description] TEXT         NOT NULL,
    [ProjectId]   BIGINT       NOT NULL,
    PRIMARY KEY CLUSTERED ([TasklistId] ASC)
);


GO
PRINT N'Creating Index [dbo].[TaskLists].[IX_Projects_TaskLists]...';


GO
CREATE NONCLUSTERED INDEX [IX_Projects_TaskLists]
    ON [dbo].[TaskLists]([ProjectId] ASC);


GO
PRINT N'Creating Table [dbo].[Tasks]...';


GO
CREATE TABLE [dbo].[Tasks] (
    [TaskId]      BIGINT IDENTITY (1, 1) NOT NULL,
    [TaskListId]  BIGINT NOT NULL,
    [Deadline]    DATE   NOT NULL,
    [Description] TEXT   NOT NULL,
    PRIMARY KEY CLUSTERED ([TaskId] ASC)
);


GO
PRINT N'Creating Index [dbo].[Tasks].[IX_TaskLists_Tasks]...';


GO
CREATE NONCLUSTERED INDEX [IX_TaskLists_Tasks]
    ON [dbo].[Tasks]([TaskListId] ASC);


GO
PRINT N'Creating Table [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [UserId]      BIGINT       IDENTITY (1, 1) NOT NULL,
    [Login]       VARCHAR (20) NOT NULL,
    [Password]    TEXT         NOT NULL,
    [Email]       TEXT         NOT NULL,
    [PrefixId]    SMALLINT     NOT NULL,
    [PhoneNumber] TEXT         NOT NULL,
    [Verified]    BIT          NOT NULL,
    [Admin]       BIT          NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating Index [dbo].[Users].[IX8_Users_Prefixes]...';


GO
CREATE NONCLUSTERED INDEX [IX8_Users_Prefixes]
    ON [dbo].[Users]([PrefixId] ASC);


GO
PRINT N'Creating Table [dbo].[Projects]...';


GO
CREATE TABLE [dbo].[Projects] (
    [ProjectId]   BIGINT       IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (30) NOT NULL,
    [Description] TEXT         NOT NULL,
    [ManagerId]   BIGINT       NOT NULL,
    PRIMARY KEY CLUSTERED ([ProjectId] ASC)
);


GO
PRINT N'Creating Index [dbo].[Projects].[IX_Users_Projects(manager?)]...';


GO
CREATE NONCLUSTERED INDEX [IX_Users_Projects(manager?)]
    ON [dbo].[Projects]([ManagerId] ASC);


GO
PRINT N'Creating Foreign Key [dbo].[Users_UserPermissions]...';


GO
ALTER TABLE [dbo].[UserPermissions]
    ADD CONSTRAINT [Users_UserPermissions] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([UserId]);


GO
PRINT N'Creating Foreign Key [dbo].[Projects_UserPermissions]...';


GO
ALTER TABLE [dbo].[UserPermissions]
    ADD CONSTRAINT [Projects_UserPermissions] FOREIGN KEY ([ProjectId]) REFERENCES [dbo].[Projects] ([ProjectId]);


GO
PRINT N'Creating Foreign Key [dbo].[Users_ProjectMembers]...';


GO
ALTER TABLE [dbo].[ProjectMembers]
    ADD CONSTRAINT [Users_ProjectMembers] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([UserId]);


GO
PRINT N'Creating Foreign Key [dbo].[Projects_ProjectMembers]...';


GO
ALTER TABLE [dbo].[ProjectMembers]
    ADD CONSTRAINT [Projects_ProjectMembers] FOREIGN KEY ([ProjectId]) REFERENCES [dbo].[Projects] ([ProjectId]);


GO
PRINT N'Creating Foreign Key [dbo].[Users_TaskDetails]...';


GO
ALTER TABLE [dbo].[TaskDetails]
    ADD CONSTRAINT [Users_TaskDetails] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Users] ([UserId]);


GO
PRINT N'Creating Foreign Key [dbo].[Tasks_TaskDetails]...';


GO
ALTER TABLE [dbo].[TaskDetails]
    ADD CONSTRAINT [Tasks_TaskDetails] FOREIGN KEY ([TaskId]) REFERENCES [dbo].[Tasks] ([TaskId]);


GO
PRINT N'Creating Foreign Key [dbo].[Projects_TaskLists]...';


GO
ALTER TABLE [dbo].[TaskLists]
    ADD CONSTRAINT [Projects_TaskLists] FOREIGN KEY ([ProjectId]) REFERENCES [dbo].[Projects] ([ProjectId]);


GO
PRINT N'Creating Foreign Key [dbo].[TaskLists_Tasks]...';


GO
ALTER TABLE [dbo].[Tasks]
    ADD CONSTRAINT [TaskLists_Tasks] FOREIGN KEY ([TaskListId]) REFERENCES [dbo].[TaskLists] ([TasklistId]);


GO
PRINT N'Creating Foreign Key [dbo].[Users_Prefixes]...';


GO
ALTER TABLE [dbo].[Users]
    ADD CONSTRAINT [Users_Prefixes] FOREIGN KEY ([PrefixId]) REFERENCES [dbo].[Prefixes] ([PrefixId]);


GO
PRINT N'Creating Foreign Key [dbo].[Users_Project(manager?)]...';


GO
ALTER TABLE [dbo].[Projects]
    ADD CONSTRAINT [Users_Project(manager?)] FOREIGN KEY ([ManagerId]) REFERENCES [dbo].[Users] ([UserId]);


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.';


GO
